1
00:00:00,000 --> 00:00:03,700
만약 밖에 비가 온다면~

2
00:00:03,700 --> 00:00:07,133
집안에 머물며 StatQuest를 보세요~

3
00:00:07,133 --> 00:00:10,600
만약 밖이 화창하다면~

4
00:00:10,600 --> 00:00:13,567
밖에 나가서, StatQuest를 보세요, 핸드폰으로~

5
00:00:13,567 --> 00:00:16,367
StatQuest~

6
00:00:17,133 --> 00:00:20,833
안녕하세요. Josh Starmer 입니다.
StatQuest에 오신걸 환영합니다.

7
00:00:20,833 --> 00:00:24,033
오늘은 대립가설에 대해 다룰 예정입니다.

8
00:00:24,033 --> 00:00:26,967
주요 개념을 파악할 수 있도록 말입니다.

9
00:00:27,900 --> 00:00:34,533
주목 : 이 StatQuest는 'Hypothesis Testing(가설검증)'과
'Null Hypothesis(귀무가설)'을 다룬 StatQuest에 후속 영상입니다.

10
00:00:34,533 --> 00:00:40,033
만약 이 StatQuest를 보지 못했다면 아래 설명란에 있는 링크를 참조 부탁드립니다.

11
00:00:40,500 --> 00:00:43,633
어느 쪽이든, 매우 빠른 리뷰를 해봅시다.

12
00:00:44,267 --> 00:00:47,100
가설검증 StatQuest에서...

13
00:00:47,100 --> 00:00:55,633
두 약이 다른지 검증하기 위해 아주 많은 수의 가설로 스트레스를 받는 것 보다...

14
00:00:56,333 --> 00:01:00,767
간단하게 귀무가설을 사용하여 차이가 있는지를 결정했습니다.

15
00:01:01,533 --> 00:01:04,900
많은 사람들을 실험했을 때

16
00:01:05,400 --> 00:01:11,267
C약을 먹은 사람들 중 훨씬 많은 사람들이 D약을 먹은 사람보다
회복시간이 더 짧았습니다.

17
00:01:11,967 --> 00:01:16,700
이러한 것이 임의의 것들에 의한 결과라고 상상하기 힘들만큼 많습니다.

18
00:01:16,700 --> 00:01:22,433
예를들어, 'C약은 먹은 사람들 전부 D약을 먹은 사람들보다
건강한 식습관을 가졌다' 라는 것은 상상하기 힘듭니다.

19
00:01:23,200 --> 00:01:26,667
그때 비로소 귀무가설이 틀렸다고 합니다.

20
00:01:27,567 --> 00:01:32,133
그때 우리는 C약과 D약의 차이가 있음을 알게됩니다.

21
00:01:33,167 --> 00:01:40,867
반대로, 약간의 임의의 것이 결과를 쉽게 바꿀 수 있다면

22
00:01:41,500 --> 00:01:44,900
그때 '귀무가설이 틀렸다'라는 것을 하지 않습니다.

23
00:01:45,900 --> 00:01:47,067
그리고는 말합니다...

24
00:01:47,200 --> 00:01:48,567
쌍쌍배앰~

25
00:01:49,333 --> 00:01:54,100
여기서 리뷰를 마치고, 대립가설에 대해서 얘기해봅시다.

26
00:01:55,167 --> 00:02:01,933
먼저 여기에 C약과 D약을 먹은 사람들이 바이러스로부터
얼마나 빠르게 회복되는지에 대한 데이터가 있습니다.

27
00:02:02,900 --> 00:02:10,533
이 모든 데이터를 모으는 목적은  '귀무가설이 틀렸다' 혹은
'귀무가설이 틀렸다라는 것을 하지 않겠다'라는 것을 결정하기 위함입니다.

28
00:02:11,367 --> 00:02:16,533
귀무가설을 틀렸다고 할지 말지 결정하기 위해서...

29
00:02:16,533 --> 00:02:20,000
통계검증이라고 불리는 어떤 것에 데이터를 넣을 것입니다.

30
00:02:20,667 --> 00:02:27,467
그리고 그 통계검증의 결과는 '귀무가설이 틀렸다'라고
할지 말지에 대한 결정입니다.

31
00:02:28,300 --> 00:02:31,000
통계검증은 3가지를 필요로 합니다.

32
00:02:32,067 --> 00:02:34,067
1. 데이터가 필요합니다.

33
00:02:35,333 --> 00:02:43,300
2. 귀무가설 혹은 일차가설 필요합니다.
(즉, 틀렸다고 할지 말지 결정할만한 어떤 것이 필요합니다.)

34
00:02:44,367 --> 00:02:47,867
3. 대립가설이 필요합니다.

35
00:02:48,867 --> 00:02:54,533
이 경우, 대립가설은 단순히 귀무가설을 반대로한 것입니다.

36
00:02:55,900 --> 00:02:59,333
경고! 무언가 약간 애매모호하게 되려고 합니다.

37
00:02:59,333 --> 00:03:07,033
지금은 '왜 대립가설이 중요하고 통계검증에서 사용되는지'에 
대한 이해를 하려고 합니다.

38
00:03:07,033 --> 00:03:10,700
어떻게 검증이 이루어지는지에 대한 세부적인 부분이 아닙니다.

39
00:03:11,267 --> 00:03:18,267
즉, 만약 세부적인 부분을 원한다면, 차근차근 순서대로 배울 수 있는
StatQuest 재생목록이 있습니다.

40
00:03:18,267 --> 00:03:20,733
링크는 아래 설명란에 있습니다.

41
00:03:22,100 --> 00:03:28,933
이제.. 'C약과 D약의 차이가 없다' 라는
귀무가설을 검증할 한 가지 방법은...

42
00:03:29,900 --> 00:03:33,900
두 약 모두로 부터 평균값을 계산하고...

43
00:03:34,667 --> 00:03:39,033
각각의 값과 평균값의 차이를 계산하고...

44
00:03:40,033 --> 00:03:46,533
이것들을 C약과 D약 각각의 평균들에 대한 차이와 비교하는 것입니다.

45
00:03:47,767 --> 00:03:53,567
전체 평균에 대한 차이는 '두 약의 차이가 없다'라는 귀무가설을 나타냅니다.

46
00:03:54,467 --> 00:03:59,800
그리고 각 약에 대한 평균에 대한 차이는 대립가설을 나타냅니다.

47
00:04:00,767 --> 00:04:07,267
만약 두 평균에 대한 차이가
전체 평균에 대한 차이보다 훨씬 더 적다면...

48
00:04:08,000 --> 00:04:13,867
두 개의 평균을 사용하는 것이 전체 평균을 사용하는 것보다
좀 더 타당하다는 것을 보여줍니다.

49
00:04:14,567 --> 00:04:17,333
그래서 귀무가설을 틀렸다라고 합니다.

50
00:04:18,600 --> 00:04:21,700
반대로 데이터가 이렇게 생겼을 때

51
00:04:22,300 --> 00:04:24,600
전체 평균에 대한 차이가...

52
00:04:25,300 --> 00:04:29,533
각각의 평균에 대한 차이와 크게 차이가 나지 않는다면...

53
00:04:30,300 --> 00:04:37,233
두 평균에 설명할 수 없는 임의의 것들이 반영되어있다고 볼 수 있습니다.

54
00:04:38,133 --> 00:04:45,900
예를 들어서, 여기의 미묘한 차이는 이 사람이 다른 사람들보다
운동을 덜 했기 때문에 발생했을 수 있습니다.

55
00:04:46,900 --> 00:04:49,767
만약 그가 운동을 좀 더 열심히 했다면...

56
00:04:49,767 --> 00:04:52,800
좀 더 빠르게 회복했을 수 있습니다.

57
00:04:53,700 --> 00:04:57,400
그리고 더이상 두 평균에서 차이를 찾아볼 수 없습니다.

58
00:04:58,367 --> 00:05:02,800
그래서 이 경우에는 '귀무가설이 틀렸다'라는 것을 하지 않습니다.

59
00:05:03,700 --> 00:05:07,433
잠깐! 만약 머신러닝용어에 익숙하다면...

60
00:05:07,900 --> 00:05:10,533
'귀무가설이 틀렸다라는 것 보이는데 실패했다'는 것은...

61
00:05:11,033 --> 00:05:17,633
두 개의 평균을 사용하면 과적합(overfit)된다는 것을 깨닫는 것과 같습니다.

62
00:05:18,800 --> 00:05:21,633
머신러닝용어에 익숙하지 않다면,

63
00:05:21,633 --> 00:05:27,400
방금 한 말을 무시하거나, 더 좋은 것은 머신러닝 StatQuest를 살펴보는 것입니다.

64
00:05:28,367 --> 00:05:34,333
주목 : 데이터 그룹이 2개만 있을 땐, 대립가설은 꽤나 명확했습니다.

65
00:05:34,333 --> 00:05:37,933
왜냐하면 단순히 귀무가설에 반대였기 때문입니다.

66
00:05:38,667 --> 00:05:45,233
그러나, 3개 혹은 더 많은 그룹이 있다면,
대립가설은 좀 더 재미있게 됩니다.

67
00:05:46,267 --> 00:05:52,767
이 경우, 귀무가설은 '약 C, D, E는 차이가 없다'입니다.

68
00:05:53,567 --> 00:06:01,800
전과 같이, 전체 평균과 데이터의 차이를 측정하여
귀무가설을 나타낼 수 있습니다.

69
00:06:02,833 --> 00:06:07,400
그러나 대립가설에 대한 선택사항이 생깁니다.

70
00:06:08,367 --> 00:06:12,800
하나의 대립가설은 '모든 약이 다 다르다'입니다.

71
00:06:13,500 --> 00:06:18,833
이 경우, 각각의 약에 대한 평균과의 차이를 측정합니다.

72
00:06:20,200 --> 00:06:29,833
또 다른 대립가설은 'C약과 D약은 차이가 없고,
E약만 차이가 있다' 입니다.

73
00:06:30,967 --> 00:06:39,533
이 경우, C약과 D약은 두 약을 합친 평균과의 차이를,
E약은 따로 구한 평균과의 차이를 계산합니다.

74
00:06:41,067 --> 00:06:45,167
지금까지 두 가지의 다른 대립가설을 세웠습니다.

75
00:06:45,967 --> 00:06:49,700
그리고 이 중 어떤 것을 통계검증에 사용하느냐에 따라...

76
00:06:50,167 --> 00:06:54,467
귀무가설에 대한 다른 결정을 내릴 수 있습니다.

77
00:06:55,367 --> 00:07:01,533
이것이 어떤 대립가설을 사용할지 명확하게 하는 것이 중요한 이유입니다.

78
00:07:02,633 --> 00:07:12,833
그러나 검증에서 사용한 대립가설과 상관없이,
귀무가설 혹은 일차가설을 틀렸다고 하거나 하지않거나 합니다.

79
00:07:13,700 --> 00:07:16,067
만약 귀무가설을 검증한다면

80
00:07:16,667 --> 00:07:19,267
(이 대립가설을 이용해서...)

81
00:07:20,267 --> 00:07:23,100
그래고 귀무가설이 틀렸다고 한다면...

82
00:07:24,233 --> 00:07:28,867
이 대립가설이 맞다고 생각하여, 귀무가설을 틀렸다고 했다고 할 수 있습니다.

83
00:07:30,267 --> 00:07:35,167
그러나 여전히 대립가설을 받아들였다고 말하지는 않습니다.

84
00:07:35,167 --> 00:07:41,733
가설검증 StatQuest에서 봤듯이 다른 대립가설이
좀 더 좋을 수 있기 때문입니다.

85
00:07:42,933 --> 00:07:49,333
다른 말로, 옳은 것을 받아들였는지 알기위해 검증할
가능한 가설들이 너무 많다는 것입니다.

86
00:07:50,233 --> 00:07:56,200
그리고 이것이 '귀무가설이 틀렸다'라고 할지 말지만 결정하는 이유입니다.

87
00:07:57,033 --> 00:07:58,567
배앰!!!

88
00:08:00,033 --> 00:08:01,100
요약하자면...

89
00:08:01,700 --> 00:08:04,333
통계검증은 3가지가 필요합니다.

90
00:08:05,333 --> 00:08:07,333
1. 데이터가 필요합니다.

91
00:08:08,267 --> 00:08:12,067
2. 귀무가설 혹은 일차가설이 필요합니다.

92
00:08:12,900 --> 00:08:16,533
3. 대립가설이 필요합니다.

93
00:08:17,833 --> 00:08:20,067
만약 그룹이 두 가지만 있다면..

94
00:08:20,067 --> 00:08:23,067
대립가설은 완전 명확합니다.

95
00:08:23,067 --> 00:08:26,567
왜냐하면 귀무가설의 반대이기 때문입니다.

96
00:08:27,667 --> 00:08:30,267
그러나 3개 혹은 더 많은 그룹의 수가 있다면

97
00:08:31,067 --> 00:08:34,233
여러가지 대립가설이 생깁니다.

98
00:08:35,300 --> 00:08:38,833
그리고 이 중 어떤 것을 통계검증에 이용하느냐에 따라

99
00:08:39,533 --> 00:08:43,067
귀무가설에 대한 다른 결정을 내릴 수 있습니다.

100
00:08:44,000 --> 00:08:44,967
쌍

101
00:08:44,967 --> 00:08:45,667
쌍뱀!!!

102
00:08:46,767 --> 00:08:53,833
주목 : 만약 p-value에 대해 잘 모른다면, 이 StatQuest가 도움이 될 것 입니다.

103
00:08:54,933 --> 00:08:58,167
그리고 만약 통계검증에 대해 더 알고싶다면...

104
00:08:58,167 --> 00:09:00,567
선형모델의 재생목록을 확인해보세요.

105
00:09:00,567 --> 00:09:05,133
복잡하게 들릴 수 있으나, 여기까지 왔다면 별 것 아닙니다.

106
00:09:06,333 --> 00:09:07,933
이제는...

107
00:09:08,400 --> 00:09:10,400
부끄러운줄 모르는 홍보시간입니다!!!

108
00:09:11,600 --> 00:09:15,233
통계와 머신러닝을 오프라인으로 복습하고 싶다면...

109
00:09:15,633 --> 00:09:19,500
Statquest.org에 있는 StatQuest 스터디 가이드를 확인하세요.

110
00:09:19,500 --> 00:09:21,500
모두를 위한 것들이 있습니다.

111
00:09:22,367 --> 00:09:26,667
꺄호~ 또 하나의 신나는 StatQuest를 마쳤습니다.

112
00:09:26,967 --> 00:09:30,733
이 StatQuest가 좋았고, 다른 것들도 보고싶다면 구독 부탁드립니다.

113
00:09:31,133 --> 00:09:33,133
만약 StatQuest를 지원하고 싶다면...

114
00:09:33,133 --> 00:09:37,967
후원 캠페인에 기부하거나, 채널 멤버가 되거나

115
00:09:37,967 --> 00:09:42,233
StatQuest 스터디가이드 혹은 티셔츠, 후드티를 사거나

116
00:09:42,233 --> 00:09:43,367
그냥 기부하는 것을 고려해주세요.

117
00:09:43,367 --> 00:09:45,500
링크는 아래 설명란에 있습니다.

118
00:09:45,500 --> 00:09:49,267
좋아요. 다음 시간에 또 만나요. Quest On~
(자막 신고 - gukyue88@gmail.com / github : gukyue88/ml-lecture-kor-subtitle)

