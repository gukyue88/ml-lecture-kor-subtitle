1
00:00:00,400 --> 00:00:03,167
어젯밤에 난 깨어있었지~

2
00:00:03,167 --> 00:00:07,933
평균, 분산 그리고 표준편차에 대해서 생각하면서~

3
00:00:07,933 --> 00:00:10,400
그래서 추정치를 구했지~

4
00:00:10,700 --> 00:00:12,467
끝내줬죠~

5
00:00:12,467 --> 00:00:14,467
StatQuest~

6
00:00:16,933 --> 00:00:20,367
안녕하세요. Josh Starmer 입니다.
StatQuest에 오신걸 환영합니다.

7
00:00:20,367 --> 00:00:23,967
오늘은 통계 기본 시리즈를 이어서 이야기하려고 합니다.

8
00:00:24,200 --> 00:00:29,133
이번 시간에는 평균, 분산 그리고 표준편차를 추정하는 것에 대해 다룹니다.

9
00:00:29,967 --> 00:00:34,333
주목 : 이 StatQuest는 이미 당신이 히스토그램...

10
00:00:34,333 --> 00:00:39,633
통계 분포에 대해 알고 있다고 가정하고 진행됩니다.
(특히, 정규분포)

11
00:00:39,633 --> 00:00:44,000
만약 모르는 부분이라면 아래 설명란에 표시된 링크의 Quest를 확인해주세요.

12
00:00:45,000 --> 00:00:51,200
또한, 이 StatQuest는 '왜 우리가 모수를 추정하는지'를 이해하고 있다고 가정합니다.

13
00:00:51,200 --> 00:00:53,500
모른다면 아래 Quest를 확인해주세요.

14
00:00:54,867 --> 00:00:57,733
모수에 관해 설명한 StatQuest에서,...

15
00:00:57,733 --> 00:01:03,067
각기 다른 5개의 간세포에서 유전자 X의 mRNA 개수를 세어봤습니다.

16
00:01:04,033 --> 00:01:09,167
만약 간세포의 mRNA가 이해되지 않는다고 하면,

17
00:01:09,167 --> 00:01:13,467
각기 다른 5개의 가게에서 초록색 사과 개수를 측정했다고 생각해주세요.

18
00:01:14,433 --> 00:01:18,000
또는 각기 다른 5개의 옷가게에서 초록색 티셔츠 개수라고 생각해봅니다.

19
00:01:19,033 --> 00:01:22,367
또는 각기 다른 5곳에서 당신이 생각하기 편한 어떤 것을 측정했다고 생각해봅니다.

20
00:01:23,433 --> 00:01:29,067
이 초록색점은 유전자 X의 mRNA 개수가 3개인 간세포를 의미합니다.

21
00:01:29,833 --> 00:01:34,933
그리고, 이 초록색점은 유전자 X의 mRNA 개수가 13개인 간세포를 의미합니다.

22
00:01:35,633 --> 00:01:36,767
19...

23
00:01:37,400 --> 00:01:38,400
24...

24
00:01:39,133 --> 00:01:40,467
그리고 29...

25
00:01:41,167 --> 00:01:44,433
만약 우리가 많은 돈과 시간이 있다면...

26
00:01:44,433 --> 00:01:50,900
2,400 억개의 간세포에서 전부 유전자 X의 mRNA 세포 개수를 셀 수 있을 것입니다.

27
00:01:52,200 --> 00:01:54,867
그러면 모든 측정값에 대한 히스토그램을 그릴 수 있습니다.

28
00:01:56,100 --> 00:01:59,233
만약 정규곡선을 히스토그램에 맞추고 싶다면...

29
00:01:59,233 --> 00:02:00,167
이것처럼..

30
00:02:01,000 --> 00:02:07,833
모집단의 평균과 분산 또는 표준편차를 계산해야 합니다.

31
00:02:09,200 --> 00:02:12,000
모집단의 평균을 계산하는 것은 쉽습니다.

32
00:02:12,000 --> 00:02:15,833
2,400억 개의 측정값을 평균내면 됩니다.

33
00:02:23,567 --> 00:02:26,267
그러면 모집단의 평균으로 20을 얻게 됩니다.

34
00:02:27,667 --> 00:02:31,100
그럼 정규곡선을 모집단의 평균의 중앙에 위치시킵니다.

35
00:02:32,200 --> 00:02:37,867
주목 : 모든 2,400개의 모집단의 측정값으로 평균을 구했기 때문에...

36
00:02:37,867 --> 00:02:41,067
이것은 모집단의 평균 추정치가 아닙니다.

37
00:02:41,500 --> 00:02:44,067
이건 실제 모집단의 평균입니다.

38
00:02:45,433 --> 00:02:52,433
그러나, 모집단의 모든 것을 측정할만큼 많은 시간과 돈이 있는 경우가 거의 없기 때문에...

39
00:02:53,233 --> 00:02:58,467
보통 상대적으로 적은 개수의 표본을 사용하여 모집단의 평균을 추정합니다.

40
00:02:59,467 --> 00:03:05,400
이 예에서는 2,400개 중 딱 5개의 세포의 측정값만 있는 상태입니다.

41
00:03:06,833 --> 00:03:10,133
모집단 평균을 추정(예측)하는 것은 엄청 쉽습니다.

42
00:03:10,133 --> 00:03:13,500
우리가 구한 측정값의 평균만 계산하면 됩니다.

43
00:03:18,733 --> 00:03:23,700
이 예에서는 추정평균은 17.6 입니다.

44
00:03:25,033 --> 00:03:28,100
오! 노우~ 두려운 용어 경고입니다.

45
00:03:29,467 --> 00:03:35,300
통계학자들은 종종 x바 기호를 추정평균에 사용합니다.

46
00:03:35,300 --> 00:03:37,600
이것은 표본평균이라고 부르기도 합니다.

47
00:03:39,000 --> 00:03:43,400
그리고 그리스 기호 μ를 모집단평균 나타낼 때 사용합니다.

48
00:03:45,133 --> 00:03:50,333
추정평균인 'x바'는 모집단 평균인 'μ'은 다릅니다.

49
00:03:50,333 --> 00:03:54,733
하지만 데이터가 많아질수록 'x바'는 'μ'에 가까워집니다.

50
00:03:56,100 --> 00:03:59,267
모집단의 완전한 데이터 세트로 돌아가봅시다.

51
00:04:00,367 --> 00:04:07,700
이제는 곡선을 얼마나 넓게 할지 결정해야합니다.
추정하는 것이 아니라 분산과 표준편차를 계산해서요.

52
00:04:08,733 --> 00:04:14,033
다시말해, 데이터들이 모집단의 평균으로부터 얼마나 퍼져있는지 계산하려고 합니다.

53
00:04:16,333 --> 00:04:21,700
이것은 모집단의 분산을 (추정이 아닌)  계산하는 공식입니다.

54
00:04:22,867 --> 00:04:27,633
주목 : 계산하는 것과 추정하는 것의 차이를 계속 언급하고 있습니다.

55
00:04:27,633 --> 00:04:30,833
왜냐하면 이것은 우리가 이후에 얘기할 큰 차이점을 만들기 때문입니다.

56
00:04:31,933 --> 00:04:39,900
여기 'x - μ' 부분은 모집단의 평균 μ에서 각 측정값인 X를 빼는 것을 의미합니다.

57
00:04:45,067 --> 00:04:47,767
제곱 기호는 각 항에 제곱을 하는 것을 의미합니다.

58
00:04:49,533 --> 00:04:54,200
그리스 기호 시그마는 모든 항을 더하는 것을 의미합니다.

59
00:04:55,367 --> 00:04:58,967
마지막으로 차의 제곱의 평균을 구합니다.

60
00:04:58,967 --> 00:05:02,167
그러기위해 측정값의 개수인 n으로 나누어줍니다.

61
00:05:02,167 --> 00:05:05,233
이 경우에는 n이 2,400 억개 입니다.

62
00:05:06,433 --> 00:05:12,900
이와같이, 각 데이터들과 모집단의 평균의 차이 제곱의 평균을 계산했습니다.

63
00:05:13,967 --> 00:05:18,467
주목 : 각 항을 제곱하는 것은 각 차이가 음수가 아닌 것을 보장합니다.

64
00:05:19,833 --> 00:05:24,733
평균의 왼쪽에 위치한 측정값들은 -의 차를 갖게 됩니다.

65
00:05:25,900 --> 00:05:30,900
이것은 평균의 오른쪽에 위치한 +의 차이를 무효화시킬 수 있습니다.

66
00:05:32,533 --> 00:05:38,067
주목 : 만약 각 항에 절대값을 쓰지 않는 이유가 궁금하다면... 좋은 질문입니다.

67
00:05:38,067 --> 00:05:42,933
이것에 대해서는 이후 영상에서 깊게 다룰 예정입니다.

68
00:05:44,300 --> 00:05:47,167
어쨋든 지금은 수학을 해봅시다.

69
00:05:48,233 --> 00:05:51,600
모집단의 분산으로 100이 나왔습니다.

70
00:05:52,600 --> 00:05:53,633
배앰

71
00:05:54,467 --> 00:05:59,100
좋습니다. 모집단의 분산을 구했고, 스스로가 대견합니다.

72
00:05:59,100 --> 00:06:02,567
그러나 성가신 것이 하나 있습니다.

73
00:06:03,533 --> 00:06:05,533
각 항이 제곱이 되었기 때문에...

74
00:06:06,867 --> 00:06:12,500
결과 100은 단위가 mRNA의 제곱이 됩니다.

75
00:06:13,367 --> 00:06:17,500
주목 : 만약 데이터가 가게들의 사과 개수라면...

76
00:06:17,500 --> 00:06:20,800
분산은 사과 개수의 제곱인 100이 될 것입니다.

77
00:06:21,700 --> 00:06:28,467
또한 x축의 단위가 제곱이 아니기 때문에 분산을 그래프 위에 표시할 수 없습니다.

78
00:06:30,100 --> 00:06:34,000
이 문제를 해결하기 위해서, 루트를 씌울 수 있습니다.

79
00:06:34,400 --> 00:06:37,833
그리고 이것이 모집단의 표준편차입니다.

80
00:06:39,067 --> 00:06:46,500
그래서 모집단의 표준편차는 모집단의 분산인 100에 루트를 씌운 10입니다.

81
00:06:47,700 --> 00:06:50,100
그리고 이것을 그래프상에 나타낼 수 있습니다.

82
00:06:51,467 --> 00:06:58,500
이것은 평균이 20이고 +- 표준편차가 10인 mRNA를 나타냅니다.

83
00:06:59,700 --> 00:07:01,700
배앰!!!

84
00:07:02,967 --> 00:07:09,467
주목 : 다음으로 넘어가기 전에
'우리는 모집단의 데이터를 얻을 수 없다는 점'을 강조하고 싶습니다.

85
00:07:09,467 --> 00:07:15,900
그래서 모집단의 평균, 분산 그리고 표준편차를 거의 계산할 수 없습니다.

86
00:07:17,000 --> 00:07:26,000
그 대신에 상대적으로 적은 수의 측정값을 이용해
모집단의 분산과 표준편차를 추정합니다.

87
00:07:26,800 --> 00:07:33,233
기억하세요. 모집단의 분산과 표준편차는 곡선이 얼마나 퍼져있는지를 결정합니다.

88
00:07:34,533 --> 00:07:43,433
그리고 이것은 추정된 분산과 추정된 표준편차가 모집단의 평균에서 
데이터가 얼마나 퍼져있는지를 반영해야한다는 것을 의미합니다.

89
00:07:44,733 --> 00:07:50,167
그러나, 실험을 할땐 모집단의 평균을 보지 않습니다.

90
00:07:50,167 --> 00:07:52,300
오직 데이터만 봅니다.

91
00:07:53,533 --> 00:07:58,133
그래서 우리는 추정평균인 x바를 대신 사용해야 합니다.

92
00:07:59,200 --> 00:08:03,200
이것은 모집단의 분산을 추정하기 위해 사용하는 공식입니다.

93
00:08:04,267 --> 00:08:09,867
거의 항상 전체 모집단이 아닌 상대적으로 적은 표본을 사용하기 때문에...

94
00:08:09,867 --> 00:08:13,000
이것이 대부분의 경우 사용할 공식입니다.

95
00:08:14,033 --> 00:08:20,700
이 공식과 모집단의 분산을 구할때의 공식의 차이는
미묘하지만 중요합니다.

96
00:08:21,633 --> 00:08:28,233
첫 번째, 우리는 모집단의 평균 μ를 모르기 때문에 표본평균 x바를 대신 사용합니다.

97
00:08:29,333 --> 00:08:33,767
두 번째, n으로 나누는 대신 (n-1)로 나눕니다.

98
00:08:35,033 --> 00:08:43,367
n-1로 나누는 것은 모집단평균 대신 표본평균을 사용하면서 발생한 차이를 보상합니다.

99
00:08:44,133 --> 00:08:49,833
그렇지않으면 모집단평균 주변의 분산을 과소평가 하게됩니다.

100
00:08:51,467 --> 00:08:55,300
이것은 표본평균과 데이터의 차이가...

101
00:08:55,733 --> 00:09:00,533
모집단평균과 데이터의 차이보다 작은 경향이 있기 때문입니다.

102
00:09:01,400 --> 00:09:07,133
그러므로, 모집단평균 주변의 차이가 일반적으로 더 큽니다.

103
00:09:08,067 --> 00:09:11,700
그리고 우리가 추정하고자 하는 것이 바로 그 '그 큰 차이의 평균' 입니다.

104
00:09:12,967 --> 00:09:23,133
주목 : 만약 당신이 저를 좋아하고, 왜 우리가 표본평균에서 발생하는 계산차이를
보상해주어야 하는지 알고 싶다면, 이후 StatQuest를 확인해주세요.

105
00:09:23,133 --> 00:09:25,767
링크는 아래 설명란에 있습니다.

106
00:09:26,900 --> 00:09:28,900
이제는 수학을 해봅시다.

107
00:09:30,033 --> 00:09:34,667
우리가 전에 했던 것 처럼, 데이터와 평균의 차이를 계산합니다.

108
00:09:38,067 --> 00:09:40,067
그리고 각 항을 제곱합니다.

109
00:09:40,900 --> 00:09:42,900
그리고 각 항을 더합니다.

110
00:09:43,667 --> 00:09:46,367
그리고 여기에선 'n-1'로 나눕니다.

111
00:09:47,833 --> 00:09:52,733
그럼 추정된 모집단의 분산은 101.8이 됩니다.

112
00:09:54,033 --> 00:10:00,000
이제 추정된 분산에 루트만 씌우면 추정 표준편차를 구할 수 있습니다.

113
00:10:00,767 --> 00:10:02,967
그리고 10.1이 나왔습니다.

114
00:10:04,400 --> 00:10:09,733
그리고 그래프상에 평균 +- 표준편차를 나타낼 수 있습니다.

115
00:10:10,667 --> 00:10:12,667
쌍배앰!!!

116
00:10:14,067 --> 00:10:24,367
추정된 모수(평균 17.6과 표준편차 10.1)는 보라색곡선에 해당합니다.

117
00:10:25,833 --> 00:10:32,833
실제 분포(평균 20, 표준편차10)과 그렇게 다르지 않습니다.

118
00:10:34,133 --> 00:10:40,000
데이터가 많을 수록 추정된 모수는 더 정확해지고 더 신뢰할 수 있습니다.

119
00:10:41,267 --> 00:10:48,367
하지만 5개의 측정값만으로도 꽤나 잘 추정했습니다.
이것은 많은 시간과 돈을 절약해주었습니다.

120
00:10:48,400 --> 00:10:50,400
꺄호~

121
00:10:51,200 --> 00:10:53,200
요약하자면...

122
00:10:53,300 --> 00:10:58,533
만약 모집단으로부터 모든 데이터를 가지고 있다면,
모집단 평균을 계산할 수 있습니다.

123
00:10:59,100 --> 00:11:04,567
모집단 평균은 측정값의 합을 측정값의 개수로 나눈 것과 같습니다.

124
00:11:04,567 --> 00:11:08,000
그리고 이것이 측정값의 평균 μ 입니다.

125
00:11:09,667 --> 00:11:16,033
모집단의 데이터가 없을 땐, 같은 공식을 사용하여 모집단 평균을 추정할 수 있습니다.

126
00:11:16,900 --> 00:11:23,500
추정된 모집단 평균은 측정값의 합을 측정값의 개수로 나눈 것과 같습니다.

127
00:11:23,500 --> 00:11:26,867
이것은 측정값의 평균 x바와 같습니다.

128
00:11:28,533 --> 00:11:34,833
모집단의 데이터가 있을 때, 모집단 분산과 표준편차를 구할 수 있습니다.

129
00:11:36,233 --> 00:11:43,533
모집단 분산은 모집단 평균 μ와 각 데이터의 차이의 제곱을 평균낸 것과 같습니다.

130
00:11:45,100 --> 00:11:53,367
다시말해, 왼쪽의 것들이 오른쪽의 것을 무효화하는 것을 막기위해 이 차이를 제곱하고 평균을 취합니다.

131
00:11:54,967 --> 00:12:00,633
모집단 표준편차는 모집단 분산에 루트만 씌워주면 됩니다.

132
00:12:01,767 --> 00:12:08,033
그리고 표준편차가 우리가 측정한 원래 단위 안에 있기 때문에 그래프상에 표시할 수 있습니다.

133
00:12:09,167 --> 00:12:15,900
그러나 보통 모집단의 데이터가 없기 때문에 이 공식을 쓸 일이 거의 없습니다.

134
00:12:17,467 --> 00:12:22,500
대신 거의 항상 분산과 표준편차를 추정합니다.

135
00:12:23,600 --> 00:12:33,800
모집단 분산을 구할 땐, 'n-1'로 나누어주어 모집단 평균 대신 
추정평균을 사용한 차이를 보상해줍니다.

136
00:12:35,000 --> 00:12:41,333
그리고 추정된 모집단의 표준편차는 추정분산의 루트만 씌워주면 됩니다.

137
00:12:42,167 --> 00:12:48,633
표준편차가 우리가 측정한 데이터의 단위와 같기 때문에
그래프상에 이것을 나타낼 수 있습니다.

138
00:12:49,467 --> 00:12:54,133
그리고 후속 StatQuest를 위한 마지막 한가지 뻔뻔한 광고...

139
00:12:54,133 --> 00:13:02,033
만약 왜 'n'으로 나누는 것이 'n-1'로 나누는 것보다 과소평가되는지 알고싶다면
아래 설명란의 Quest를 확인하세요.

140
00:13:03,333 --> 00:13:05,567
세쌍배앰!!!

141
00:13:07,167 --> 00:13:16,933
추신. 이 StatQuest에서 '얼마나 모집단 데이터를 가지는 것이 드문 일인지'와 
'거의 항상 모수를 추정한다'는 것을 강조했습니다.

142
00:13:17,967 --> 00:13:28,633
이렇게한 이유 중 하나는 많은 소프트웨어 패키지가 기본으로
추정 분산과 표준편차를 제공하지만, 엑셀은 그렇지 않기 때문입니다.

143
00:13:29,700 --> 00:13:32,467
대신 두가지 선택사항을 줍니다.

144
00:13:32,467 --> 00:13:37,400
하나는 모집단의 분산을 계산하는 'VAR.P'이고...

145
00:13:37,400 --> 00:13:40,900
다른 하나는 그것을 추정하는 VAR.S입니다.

146
00:13:42,133 --> 00:13:50,767
거의 모든 경우 모집단의 데이터가 아닌 상대적으로 적은 표본을 가지기 때문에
거의 항상 VAR.S를 사용해야합니다.

147
00:13:52,467 --> 00:13:56,867
꺄호~ 또 하나의 신나는 StatQuest가 끝났습니다.

148
00:13:56,867 --> 00:14:00,467
만약 영상이 마음에 드셨다면 구독 부탁드립니다.

149
00:14:00,467 --> 00:14:07,300
만약 StatQuest를 지원하고 싶다면 음악이나 티셔츠 혹은 후드티를 사는 것을 생각해보세요.
혹은 그냥 기부도 가능합니다.

150
00:14:07,300 --> 00:14:09,700
링크는 아래 설명란에 있습니다.

151
00:14:09,700 --> 00:14:13,267
좋습니다. 다음시간에 뵈요~ Quest On~
(자막 신고 - gukyue88@gmail.com / github : gukyue88/ml-lecture-kor-subtitle)

